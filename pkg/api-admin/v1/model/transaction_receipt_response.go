// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// TransactionReceiptResponse transaction receipt response
//
// swagger:model transactionReceiptResponse
type TransactionReceiptResponse struct {

	// blockchain
	Blockchain string `json:"blockchain"`

	// confirmations
	Confirmations int64 `json:"confirmations"`

	// is confirmed
	IsConfirmed bool `json:"isConfirmed"`

	// is test
	IsTest bool `json:"isTest"`

	// network fee
	NetworkFee string `json:"networkFee"`

	// network fee formatted
	NetworkFeeFormatted string `json:"networkFeeFormatted"`

	// nonce
	Nonce int64 `json:"nonce"`

	// recipient
	Recipient string `json:"recipient"`

	// sender
	Sender string `json:"sender"`

	// success
	Success bool `json:"success"`

	// transaction hash
	TransactionHash string `json:"transactionHash"`
}

// Validate validates this transaction receipt response
func (m *TransactionReceiptResponse) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this transaction receipt response based on context it is used
func (m *TransactionReceiptResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TransactionReceiptResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TransactionReceiptResponse) UnmarshalBinary(b []byte) error {
	var res TransactionReceiptResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
