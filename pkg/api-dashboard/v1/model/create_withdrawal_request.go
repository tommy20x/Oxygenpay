// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateWithdrawalRequest create withdrawal request
//
// swagger:model createWithdrawalRequest
type CreateWithdrawalRequest struct {

	// Address UUID
	// Example: ABF75267-910D-4FC8-9E21-3A3B48509DC2
	// Required: true
	AddressID string `json:"addressId"`

	// Withdrawal amount as string
	// Example: 0.0367
	// Required: true
	Amount string `json:"amount"`

	// Balance UUID
	// Example: 2402782A-711D-4ECD-8B73-FE561EBF5FEC
	// Required: true
	BalanceID string `json:"balanceId"`
}

// Validate validates this create withdrawal request
func (m *CreateWithdrawalRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAddressID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAmount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateBalanceID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateWithdrawalRequest) validateAddressID(formats strfmt.Registry) error {

	if err := validate.RequiredString("addressId", "body", m.AddressID); err != nil {
		return err
	}

	return nil
}

func (m *CreateWithdrawalRequest) validateAmount(formats strfmt.Registry) error {

	if err := validate.RequiredString("amount", "body", m.Amount); err != nil {
		return err
	}

	return nil
}

func (m *CreateWithdrawalRequest) validateBalanceID(formats strfmt.Registry) error {

	if err := validate.RequiredString("balanceId", "body", m.BalanceID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create withdrawal request based on context it is used
func (m *CreateWithdrawalRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CreateWithdrawalRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateWithdrawalRequest) UnmarshalBinary(b []byte) error {
	var res CreateWithdrawalRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
