// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// EthereumTransaction ethereum transaction
//
// swagger:model ethereumTransaction
type EthereumTransaction struct {

	// RLP-encoded transaction
	// Example: 0xf86e83014b2985048ccb44b1827530944675c7e5baafbffbca748158becba61ef3b0a26387c2a454bcf91b3f8026a0db0be3dcc25213b286e08d018fe8143eb85a3b7bb5cf3749245e907158e9c8daa033c7ec9362ee890d63b89e9dbfcfcb6edd9432321102c1d2ea7921c6cc07009e
	RawTransaction string `json:"rawTransaction"`
}

// Validate validates this ethereum transaction
func (m *EthereumTransaction) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this ethereum transaction based on context it is used
func (m *EthereumTransaction) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *EthereumTransaction) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EthereumTransaction) UnmarshalBinary(b []byte) error {
	var res EthereumTransaction
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
