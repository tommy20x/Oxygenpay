// Code generated by go-swagger; DO NOT EDIT.

package wallet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/oxygenpay/oxygen/pkg/api-kms/v1/model"
)

// NewCreateTronTransactionParams creates a new CreateTronTransactionParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateTronTransactionParams() *CreateTronTransactionParams {
	return &CreateTronTransactionParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateTronTransactionParamsWithTimeout creates a new CreateTronTransactionParams object
// with the ability to set a timeout on a request.
func NewCreateTronTransactionParamsWithTimeout(timeout time.Duration) *CreateTronTransactionParams {
	return &CreateTronTransactionParams{
		timeout: timeout,
	}
}

// NewCreateTronTransactionParamsWithContext creates a new CreateTronTransactionParams object
// with the ability to set a context for a request.
func NewCreateTronTransactionParamsWithContext(ctx context.Context) *CreateTronTransactionParams {
	return &CreateTronTransactionParams{
		Context: ctx,
	}
}

// NewCreateTronTransactionParamsWithHTTPClient creates a new CreateTronTransactionParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateTronTransactionParamsWithHTTPClient(client *http.Client) *CreateTronTransactionParams {
	return &CreateTronTransactionParams{
		HTTPClient: client,
	}
}

/* CreateTronTransactionParams contains all the parameters to send to the API endpoint
   for the create tron transaction operation.

   Typically these are written to a http.Request.
*/
type CreateTronTransactionParams struct {

	// Data.
	Data *model.CreateTronTransactionRequest

	/* WalletID.

	   Wallet UUID
	*/
	WalletID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create tron transaction params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateTronTransactionParams) WithDefaults() *CreateTronTransactionParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create tron transaction params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateTronTransactionParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create tron transaction params
func (o *CreateTronTransactionParams) WithTimeout(timeout time.Duration) *CreateTronTransactionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create tron transaction params
func (o *CreateTronTransactionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create tron transaction params
func (o *CreateTronTransactionParams) WithContext(ctx context.Context) *CreateTronTransactionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create tron transaction params
func (o *CreateTronTransactionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create tron transaction params
func (o *CreateTronTransactionParams) WithHTTPClient(client *http.Client) *CreateTronTransactionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create tron transaction params
func (o *CreateTronTransactionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithData adds the data to the create tron transaction params
func (o *CreateTronTransactionParams) WithData(data *model.CreateTronTransactionRequest) *CreateTronTransactionParams {
	o.SetData(data)
	return o
}

// SetData adds the data to the create tron transaction params
func (o *CreateTronTransactionParams) SetData(data *model.CreateTronTransactionRequest) {
	o.Data = data
}

// WithWalletID adds the walletID to the create tron transaction params
func (o *CreateTronTransactionParams) WithWalletID(walletID string) *CreateTronTransactionParams {
	o.SetWalletID(walletID)
	return o
}

// SetWalletID adds the walletId to the create tron transaction params
func (o *CreateTronTransactionParams) SetWalletID(walletID string) {
	o.WalletID = walletID
}

// WriteToRequest writes these params to a swagger request
func (o *CreateTronTransactionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Data != nil {
		if err := r.SetBodyParam(o.Data); err != nil {
			return err
		}
	}

	// path param walletId
	if err := r.SetPathParam("walletId", o.WalletID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
